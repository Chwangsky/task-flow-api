# 기본 설정
spring.application.name=api-server
server.port=9090
spring.config.import=optional:configtree:./

## PostgreSQL DataSource 설정
spring.datasource.url=${POSTGRES_URL}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}

## JPA 설정
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# JPA 디버깅 용
logging.level.org.hibernate.SQL=DEBUG
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql=trace

# Redis 설정
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

# MongoDB 설정
spring.data.mongodb.uri=${MONGODB_URI}

# SQL 실행 결과와 파라미터 바인딩을 포함한 로그
logging.level.jdbc.sqlonly=DEBUG
logging.level.jdbc.resultsettable=DEBUG
logging.level.jdbc.audit=TRACE

# 애플리케이션 출력에 색상 추가
spring.output.ansi.enabled=always

# OAuth Google 설정
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/oauth2/callback/google
spring.security.oauth2.client.registration.google.scope=profile,email,https://www.googleapis.com/auth/calendar.events.readonly

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo

# GMail 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=0wotaskflow@gmail.com
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000


# JWT 설정
jwt.access-token.secret-key=${ACCESS_TOKEN_SECRET}
jwt.access-token.expiration=3600
jwt.refresh-token.secret-key=${REFRESH_TOKEN_SECRET}
jwt.refresh-token.expiration=86400

# email 인증 토큰 만료시간
email.verifytoken.expiration=3600